package com.turn.inscription.dao.mapper;

import com.turn.inscription.dao.entity.InscriptionInventory;
import com.turn.inscription.dao.entity.InscriptionInventoryExample;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface InscriptionInventoryMapper {
    long countByExample(InscriptionInventoryExample example);

    int deleteByExample(InscriptionInventoryExample example);

    int deleteByPrimaryKey(Long id);

    int insert(InscriptionInventory record);

    int insertSelective(InscriptionInventory record);

    List<InscriptionInventory> selectByExampleWithBLOBs(InscriptionInventoryExample example);

    List<InscriptionInventory> selectByExample(InscriptionInventoryExample example);

    InscriptionInventory selectByPrimaryKey(Long id);

    int updateByExampleSelective(@Param("record") InscriptionInventory record, @Param("example") InscriptionInventoryExample example);

    int updateByExampleWithBLOBs(@Param("record") InscriptionInventory record, @Param("example") InscriptionInventoryExample example);

    int updateByExample(@Param("record") InscriptionInventory record, @Param("example") InscriptionInventoryExample example);

    int updateByPrimaryKeySelective(InscriptionInventory record);

    int updateByPrimaryKeyWithBLOBs(InscriptionInventory record);

    int updateByPrimaryKey(InscriptionInventory record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inscription_inventory
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    int batchInsert(@Param("list") List<InscriptionInventory> list);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inscription_inventory
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    int batchInsertSelective(@Param("list") List<InscriptionInventory> list, @Param("selective") InscriptionInventory.Column ... selective);
}